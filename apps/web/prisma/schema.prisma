generator client {
  provider = "prisma-client-js"
}

enum VerificationStatus {
  FULL
  PARTIAL
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Verification {
  id                Int      @id @default(autoincrement())
  contractAddress   String   @unique @db.VarChar(255)
  chainID           String
  isVerified        Boolean
  sourceCode        String
  bytecode          String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  verificationStatus VerificationStatus
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  User               User      @relation(fields: [userId], references: [id])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User     @relation(fields: [userId], references: [id])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id        Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}